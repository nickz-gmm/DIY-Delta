name: Delta – Build installers (Windows + macOS)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:

env:
  APP_DIR: apps/desktop

jobs:
  windows:
    name: Windows – EXE + NSIS
    runs-on: windows-2022  # pin now; you can switch to windows-latest later
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack + pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Install frontend deps
        working-directory: ${{ env.APP_DIR }}
        run: pnpm install

      - name: Install Tauri CLI (dev dep)
        working-directory: ${{ env.APP_DIR }}
        run: pnpm add -D @tauri-apps/cli

      - name: Print tauri info (sanity)
        working-directory: ${{ env.APP_DIR }}
        run: pnpm tauri info

      - name: Setup Rust (stable MSVC)
        uses: dtolnay/rust-toolchain@stable

      - name: Install NSIS (for installer)
        run: choco install nsis -y

      - name: Build portable app (.exe)
        working-directory: ${{ env.APP_DIR }}
        run: pnpm tauri build --bundles app

      - name: Build NSIS installer
        working-directory: ${{ env.APP_DIR }}
        run: pnpm tauri build --bundles nsis

      - name: Upload artifacts (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: delta-windows
          path: |
            ${{ env.APP_DIR }}/target/release/bundle/app/**
            ${{ env.APP_DIR }}/target/release/bundle/nsis/**
          if-no-files-found: error

  macos:
    name: macOS – .app + .dmg
    runs-on: macos-14      # pin now; switch to macos-latest later if you like
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack + pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Install frontend deps
        working-directory: ${{ env.APP_DIR }}
        run: pnpm install

      - name: Install Tauri CLI (dev dep)
        working-directory: ${{ env.APP_DIR }}
        run: pnpm add -D @tauri-apps/cli

      - name: Print tauri info (sanity)
        working-directory: ${{ env.APP_DIR }}
        run: pnpm tauri info

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Build .app
        working-directory: ${{ env.APP_DIR }}
        run: pnpm tauri build --bundles app

      - name: Build .dmg
        working-directory: ${{ env.APP_DIR }}
        run: pnpm tauri build --bundles dmg

      - name: Upload artifacts (macOS)
        uses: actions/upload-artifact@v4
        with:
          name: delta-macos
          path: |
            ${{ env.APP_DIR }}/target/release/bundle/app/**
            ${{ env.APP_DIR }}/target/release/bundle/dmg/**
          if-no-files-found: error
